name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1

jobs:
  test:
    name: Test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        rust: [stable]

    steps:
    - uses: actions/checkout@v4

    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        toolchain: ${{ matrix.rust }}

    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          ferro/target
        key: ${{ runner.os }}-cargo-${{ matrix.rust }}-${{ hashFiles('ferro/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-${{ matrix.rust }}-
          ${{ runner.os }}-cargo-

    - name: Run tests
      working-directory: ferro
      run: cargo test --verbose

    - name: Run doc tests
      working-directory: ferro
      run: cargo test --doc

  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        components: rustfmt, clippy

    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          ferro/target
        key: lint-cargo-${{ hashFiles('ferro/Cargo.lock') }}

    - name: Check formatting
      working-directory: ferro
      run: cargo fmt --all -- --check

    - name: Run clippy
      working-directory: ferro
      run: cargo clippy --all-targets --all-features -- -D warnings

    - name: Check documentation
      working-directory: ferro
      run: cargo doc --no-deps --document-private-items
      env:
        RUSTDOCFLAGS: -D warnings

  security:
    name: Security Audit
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Security audit
      uses: actions-rs/audit-check@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        args: --file ferro/Cargo.lock

  build-check:
    name: Build Check
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable

    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          ferro/target
        key: build-check-cargo-${{ hashFiles('ferro/Cargo.lock') }}

    - name: Check build
      working-directory: ferro
      run: cargo check --all-targets --all-features

    - name: Check build (no default features)
      working-directory: ferro
      run: cargo check --no-default-features
